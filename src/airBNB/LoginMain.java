/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package airBNB;

import airBNB.Helper.Auth;
import airBNB.Helper.Validate;
import javax.swing.JOptionPane;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.*;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

/**
 *
 * @author Administrator
 */
public class LoginMain extends javax.swing.JFrame {
    
    private Auth auth;
    /**
     * Creates new form login
     */
    public LoginMain() {
        initComponents();
    }
    
    public LoginMain(Auth auth) {
        this();
        this.auth = auth;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Employee = new javax.swing.JRadioButton();
        logo = new javax.swing.JLabel();
        FrameClose = new javax.swing.JLabel();
        login = new java.awt.Button();
        jSeparator1 = new javax.swing.JSeparator();
        userLabel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        user = new javax.swing.JTextField();
        pass = new javax.swing.JPasswordField();
        passLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(32, 33, 35));
        jPanel1.setMinimumSize(new java.awt.Dimension(290, 240));
        jPanel1.setPreferredSize(new java.awt.Dimension(291, 389));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanel1MouseReleased(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Employee.setBackground(new java.awt.Color(33, 34, 35));
        Employee.setForeground(new java.awt.Color(255, 255, 255));
        Employee.setText("Employee?");
        Employee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmployeeActionPerformed(evt);
            }
        });
        jPanel1.add(Employee, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 260, -1, -1));

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/airBNB/logo.png"))); // NOI18N
        jPanel1.add(logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 26, -1, 80));

        FrameClose.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        FrameClose.setForeground(new java.awt.Color(255, 255, 255));
        FrameClose.setText("X");
        FrameClose.setName(""); // NOI18N
        FrameClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                FrameCloseMouseReleased(evt);
            }
        });
        jPanel1.add(FrameClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 0, 20, 20));

        login.setBackground(new java.awt.Color(102, 102, 255));
        login.setFont(new java.awt.Font("DialogInput", 3, 18)); // NOI18N
        login.setForeground(new java.awt.Color(255, 255, 255));
        login.setLabel("Login");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });
        jPanel1.add(login, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, 170, 40));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, 170, 10));

        userLabel.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        userLabel.setForeground(new java.awt.Color(255, 255, 255));
        userLabel.setText("Username:");
        jPanel1.add(userLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 70, -1));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 170, 10));

        user.setBackground(new java.awt.Color(32, 33, 35));
        user.setForeground(new java.awt.Color(255, 255, 255));
        user.setBorder(null);
        jPanel1.add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, 170, -1));

        pass.setBackground(new java.awt.Color(32, 33, 35));
        pass.setForeground(new java.awt.Color(255, 255, 255));
        pass.setBorder(null);
        pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passActionPerformed(evt);
            }
        });
        jPanel1.add(pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, 170, 20));

        passLabel1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        passLabel1.setForeground(new java.awt.Color(255, 255, 255));
        passLabel1.setText("Password:");
        jPanel1.add(passLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 70, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 290, 350));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
  int xy;
  int xx;
    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x-xx, y-xy);
    }//GEN-LAST:event_jPanel1MouseDragged

    private void FrameCloseMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FrameCloseMouseReleased
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_FrameCloseMouseReleased

    private void jPanel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jPanel1MouseReleased

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        // TODO add your handling code here:
         xx = evt.getX();
         xy = evt.getY();
    }//GEN-LAST:event_jPanel1MousePressed

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
        // TODO add your handling code here:
        //Simple Login Created
        //Prolly make this SHA256 after
        
        if (Employee.isSelected()) {
            // Employee Test
            if (user.getText().equals("admin") && new String(pass.getPassword()).equals("password")){
                JOptionPane.showMessageDialog(null, "Welcome " + user.getText()+"!", "InfoBox: Success", JOptionPane.INFORMATION_MESSAGE);
                dispose();
                EmployeeMain em  = new EmployeeMain();
                em.setVisible(true);
            } else {
                String usernameChecked = Validate.validateUsername(user.getText());
                String[] passwordChecked = Validate.validatePassword(new String(pass.getPassword()), new String(pass.getPassword()));
                
                if(! usernameChecked.equals("") && ! passwordChecked[0].equals("")) {
                    JOptionPane.showMessageDialog(null, "Error with either username or password!", "InfoBox: Warning", JOptionPane.WARNING_MESSAGE);
                    user.setText("");
                    pass.setText("");
                    return;
                } else {
                    Statement st = null;
                    
                    try {
                        st = auth.getConnection().createStatement();
                        String q = "SELECT employee_id, username, password, fname, lname, country FROM project.employee WHERE username='" + user.getText() + "' AND password='" + new String(pass.getPassword()) + "';";
                        ResultSet rs = st.executeQuery(q);
                        ArrayList<Map<String, String>> resultsMap = new ArrayList<>();
                        int results = 0;
                        while(rs.next()) {
                            Map<String, String> temp = new HashMap<String, String>();
                            temp.put("employee_id", rs.getString("employee_id"));
                            temp.put("username", rs.getString("username"));
                            temp.put("password", rs.getString("password"));
                            temp.put("fname", rs.getString("fname"));
                            temp.put("lname", rs.getString("lname"));
                            temp.put("country", rs.getString("country"));
                            resultsMap.add(temp);
                            results++;
                        }
                        rs.close();
                        st.close();
                        
                        if(results > 1) {
                            JOptionPane.showMessageDialog(null, "Multiple Records Found", "InfoBox: Query Results", JOptionPane.WARNING_MESSAGE);
                            user.setText("");
                            pass.setText("");
                            return;
                        } else if(results == 1) {
                            JOptionPane.showMessageDialog(null, "Welcome " + user.getText()+"!", "InfoBox: Success", JOptionPane.INFORMATION_MESSAGE);
                            dispose();
                            EmployeeMain m = new EmployeeMain(resultsMap.get(0), auth);
                            m.setVisible(true);
                            return;
                        } else {
                            JOptionPane.showMessageDialog(null, "Incorrect username or password!", "InfoBox: Incorrect Credentials", JOptionPane.ERROR_MESSAGE);
                            user.setText("");
                            pass.setText("");
                        }
                    } catch(SQLException | ClassNotFoundException ex) {
                        Logger.getLogger(LoginMain.class.getName()).log(Level.SEVERE, ex, null);
                    }
                }
            }
        }
       
        if (user.getText().equals("admin") && new String(pass.getPassword()).equals("password")){
            JOptionPane.showMessageDialog(null, "Welcome " + user.getText()+"!", "InfoBox: Success", JOptionPane.INFORMATION_MESSAGE);
            Map<String, String> bundle = new HashMap<String, String>();
            bundle.put("id", "0000");
            bundle.put("username", "admin");
            bundle.put("password", "password");
            bundle.put("fname", "Program");
            bundle.put("lname", "Admin");
            bundle.put("accounttype", "adminacc");
            dispose();
            Main m = new Main(bundle, auth);
            m.setVisible(true);
        }
        
       
        else{
            
            String usernameChecked = Validate.validateUsername(user.getText());
            String[] passwordChecked = Validate.validatePassword(new String(pass.getPassword()), new String(pass.getPassword()));
            
            if(! usernameChecked.equals("") && ! passwordChecked[0].equals("")) {
                JOptionPane.showMessageDialog(null, "Error with either username or password!", "InfoBox: Warning", JOptionPane.WARNING_MESSAGE);
                user.setText("");
                pass.setText("");
                return;
            }
            
            Statement st = null;
            
            try{
                st = auth.getConnection().createStatement();
                String SQL = "SELECT id, username, password, fname, lname, country, accounttype FROM project.users u WHERE username='" + user.getText() + "' AND password='" + new String(pass.getPassword()) + "';";
                ArrayList<Map<String, String>> resultsMap = new ArrayList<>();
                ResultSet rs = st.executeQuery(SQL);
                int results = 0;
                while(rs.next()) {
                    Map<String, String> temp = new HashMap<>();
                    temp.put("id", rs.getString("id"));
                    temp.put("username", rs.getString("username"));
                    temp.put("password", rs.getString("password"));
                    temp.put("fname", rs.getString("fname"));
                    temp.put("lname", rs.getString("lname"));
                    temp.put("country", rs.getString("country"));
                    temp.put("accounttype", rs.getString("accounttype"));
                    resultsMap.add(temp);
                    results++;
                }
                rs.close();
                st.close();
                
                if(results > 1) {
                    JOptionPane.showMessageDialog(null, "Multiple Records Found", "InfoBox: Query Results", JOptionPane.WARNING_MESSAGE);
                    user.setText("");
                    pass.setText("");
                    return;
                } else if(results == 1) {
                    JOptionPane.showMessageDialog(null, "Welcome " + user.getText()+"!", "InfoBox: Success", JOptionPane.INFORMATION_MESSAGE);
                    dispose();
                    Main m = new Main(resultsMap.get(0), auth);
                    m.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(null, "Incorrect username or password!", "InfoBox: Incorrect Credentials", JOptionPane.ERROR_MESSAGE);
                    user.setText("");
                    pass.setText("");
                }
                
            } catch(SQLException | ClassNotFoundException ex) {
                Logger.getLogger(LoginMain.class.getName()).log(Level.SEVERE, ex, null);
            }
            
        }
        
        
    }//GEN-LAST:event_loginActionPerformed

    private void passActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_passActionPerformed

    private void EmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmployeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmployeeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Employee;
    private javax.swing.JLabel FrameClose;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private java.awt.Button login;
    private javax.swing.JLabel logo;
    private javax.swing.JPasswordField pass;
    private javax.swing.JLabel passLabel1;
    private javax.swing.JTextField user;
    private javax.swing.JLabel userLabel;
    // End of variables declaration//GEN-END:variables
}
