/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package airBNB;

import airBNB.Helper.Auth;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import java.util.logging.Logger;
import java.util.logging.Level;
import java.sql.*;
import java.util.ArrayList;
import java.util.HashMap;
/**
 *
 * @author Administrator
 */
public class hostProperties extends javax.swing.JFrame {

    private Auth auth;
    private ArrayList<Map<String, String>> properties;
    /**
     * Creates new form login
     */
    
    public hostProperties() {
        initComponents();
    }
    
    public hostProperties(Map<String, String> bundle, Auth auth){
        this();
        this.bundle = bundle;
        this.auth = auth;
        this.properties = new ArrayList<>();
        fetch();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        logo = new javax.swing.JLabel();
        FrameClose = new javax.swing.JLabel();
        LogOut = new java.awt.Button();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        Edit = new java.awt.Button();
        LogOut1 = new java.awt.Button();
        Add1 = new java.awt.Button();
        Delete = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(32, 33, 35));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanel1MouseReleased(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/airBNB/logo.png"))); // NOI18N
        jPanel1.add(logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, -1, 80));

        FrameClose.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        FrameClose.setForeground(new java.awt.Color(255, 255, 255));
        FrameClose.setText("X");
        FrameClose.setName(""); // NOI18N
        FrameClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                FrameCloseMouseReleased(evt);
            }
        });
        jPanel1.add(FrameClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, 20, 20));

        LogOut.setBackground(new java.awt.Color(102, 102, 255));
        LogOut.setFont(new java.awt.Font("DialogInput", 3, 18)); // NOI18N
        LogOut.setForeground(new java.awt.Color(255, 255, 255));
        LogOut.setLabel("Log-Out");
        LogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogOutActionPerformed(evt);
            }
        });
        jPanel1.add(LogOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 460, 170, 40));

        jList1.setBackground(new java.awt.Color(32, 33, 35));
        jList1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jList1.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(jList1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 610, 260));

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Your Properties:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        Edit.setBackground(new java.awt.Color(102, 102, 255));
        Edit.setFont(new java.awt.Font("DialogInput", 3, 18)); // NOI18N
        Edit.setForeground(new java.awt.Color(255, 255, 255));
        Edit.setLabel("Edit");
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });
        jPanel1.add(Edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 390, 100, 40));

        LogOut1.setBackground(new java.awt.Color(102, 102, 255));
        LogOut1.setFont(new java.awt.Font("DialogInput", 3, 18)); // NOI18N
        LogOut1.setForeground(new java.awt.Color(255, 255, 255));
        LogOut1.setLabel("<- Go Back");
        LogOut1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogOut1ActionPerformed(evt);
            }
        });
        jPanel1.add(LogOut1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 460, 170, 40));

        Add1.setBackground(new java.awt.Color(102, 102, 255));
        Add1.setFont(new java.awt.Font("DialogInput", 3, 18)); // NOI18N
        Add1.setForeground(new java.awt.Color(255, 255, 255));
        Add1.setLabel("Add");
        Add1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add1ActionPerformed(evt);
            }
        });
        jPanel1.add(Add1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 390, 100, 40));

        Delete.setBackground(new java.awt.Color(102, 102, 255));
        Delete.setFont(new java.awt.Font("DialogInput", 3, 18)); // NOI18N
        Delete.setForeground(new java.awt.Color(255, 255, 255));
        Delete.setLabel("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        jPanel1.add(Delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 390, 100, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 510));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void fetch() {
        DefaultListModel m = new DefaultListModel();
        properties.clear();
        
        try {
            String q = "select * from project.property WHERE host_id=(select host_id from project.host where user_id=" + bundle.get("id") + ")";
            Statement st = auth.getConnection().createStatement();
            ResultSet rs = st.executeQuery(q);
            while(rs.next()) {
                Map<String, String> temp = new HashMap<>();
                temp.put("property_id", rs.getString("property_id"));
                temp.put("houseno", rs.getString("houseno"));
                temp.put("street", rs.getString("street"));
                temp.put("city", rs.getString("city"));
                temp.put("province", rs.getString("province"));
                temp.put("propertytype", rs.getString("propertytype"));
                temp.put("roomtype", rs.getString("roomtype"));
                temp.put("accommodates", rs.getString("accommodates"));
                temp.put("amenities", rs.getString("amenities"));
                temp.put("availabledate", rs.getString("availabledate"));
                temp.put("price", rs.getString("price"));
                temp.put("host_id", rs.getString("host_id"));
                temp.put("bathroom", rs.getString("bathroom"));
                temp.put("bedroom", rs.getString("bedroom"));
                temp.put("country", rs.getString("country"));
                
                properties.add(temp);
                
                m.addElement(
                        temp.get("houseno") + " " + temp.get("street") + " " + temp.get("city") + " " + temp.get("province") + "    Price: " + temp.get("price") + " per night"
                );
            }
            st.close();
            rs.close();
            jList1.setModel(m);
        } catch(SQLException | ClassNotFoundException ex) {
            Logger.getLogger(hostProperties.class.getName()).log(Level.SEVERE, ex, null);
        }
    }
    
    int xy;
    int xx;
    Map<String, String> bundle;
    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x-xx, y-xy);
    }//GEN-LAST:event_jPanel1MouseDragged

    private void jPanel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jPanel1MouseReleased

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        // TODO add your handling code here:
         xx = evt.getX();
         xy = evt.getY();
    }//GEN-LAST:event_jPanel1MousePressed

    private void FrameCloseMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FrameCloseMouseReleased
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_FrameCloseMouseReleased

    private void LogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogOutActionPerformed
        // TODO add your handling code here:
        
        //not done properly.
        
        JOptionPane.showMessageDialog(null, "Logged-Out!", "InfoBox: Success", JOptionPane.INFORMATION_MESSAGE);
        dispose();
        LoginMain login = new LoginMain(auth);
        login.setVisible(true);
        
        
        

    }//GEN-LAST:event_LogOutActionPerformed

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
        // TODO add your handling code here:
        
        int select = jList1.getSelectedIndex();
    
        
        
        if (select == -1){
            JOptionPane.showMessageDialog(null, "Select a Property to Edit.", "InfoBox: Error", JOptionPane.INFORMATION_MESSAGE);
        }
        
        else{
            
            try{
                
                Map<String, String> temp = new HashMap<>();
                temp = properties.get(select);
                
                PropEdit pe = new PropEdit(bundle,auth.getConnection(), temp);
                pe.setVisible(true);
                
            }catch(SQLException | ClassNotFoundException ex) {
                Logger.getLogger(hostProperties.class.getName()).log(Level.SEVERE, ex, null);
            }
        }
    }//GEN-LAST:event_EditActionPerformed

    private void LogOut1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogOut1ActionPerformed
        // TODO add your handling code here:
        dispose();
        Main  m = new Main(bundle, auth);
        m.setVisible(true);
    }//GEN-LAST:event_LogOut1ActionPerformed

    private void Add1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add1ActionPerformed
        // TODO add your handling code here:
        try {
            PropAdd pa = new PropAdd(bundle, auth.getConnection());
            pa.setVisible(true);
        } catch(SQLException | ClassNotFoundException ex) {
            Logger.getLogger(hostProperties.class.getName()).log(Level.SEVERE, ex, null);
        }
        fetch();
        
    }//GEN-LAST:event_Add1ActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
       
        int select = jList1.getSelectedIndex();
       
        
        if (select == -1){
            JOptionPane.showMessageDialog(null, "Select a Property to Delete.", "InfoBox: Error", JOptionPane.INFORMATION_MESSAGE);
        }
        
        else{
       
            
            
            Map<String, String> temp = new HashMap<>();
            temp = properties.get(select);
            String id = temp.get("property_id");
            try{
                
                String q = "delete from project.property WHERE property_id="+id + ";";
                Statement st = auth.getConnection().createStatement();
                st.execute(q);
                
                st.close();
                
            }catch(SQLException | ClassNotFoundException ex) {
                Logger.getLogger(hostProperties.class.getName()).log(Level.SEVERE, ex, null);
            }
            JOptionPane.showMessageDialog(null, "Property Deleted!", "InfoBox: Success", JOptionPane.INFORMATION_MESSAGE);
        
        }
    
        
        
        
        
    }//GEN-LAST:event_DeleteActionPerformed

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
        // TODO add your handling code here:
        System.out.println("Lost Focus");
    }//GEN-LAST:event_formWindowLostFocus

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        fetch();
    }//GEN-LAST:event_formWindowGainedFocus

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(hostProperties.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(hostProperties.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(hostProperties.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(hostProperties.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new hostProperties().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button Add1;
    private java.awt.Button Delete;
    private java.awt.Button Edit;
    private javax.swing.JLabel FrameClose;
    private java.awt.Button LogOut;
    private java.awt.Button LogOut1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel logo;
    // End of variables declaration//GEN-END:variables
}
